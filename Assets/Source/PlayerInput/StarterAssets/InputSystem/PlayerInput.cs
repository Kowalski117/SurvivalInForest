//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Source/PlayerInput/StarterAssets/InputSystem/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""f62a4b92-ef5e-4175-8f4c-c9075429d32c"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""6bc1aaf4-b110-4ff7-891e-5b9fe6f32c4d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""2690c379-f54d-45be-a724-414123833eb4"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""8c4abdf8-4099-493a-aa1a-129acec7c3df"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""PassThrough"",
                    ""id"": ""980e881e-182c-404c-8cbf-3d09fdb48fef"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Stealth"",
                    ""type"": ""PassThrough"",
                    ""id"": ""0a4cbb4f-5588-45ec-acd4-ebedafa08bae"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PickUp"",
                    ""type"": ""PassThrough"",
                    ""id"": ""7efafd88-afda-45a1-bfef-28f2f16ca2d6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""PassThrough"",
                    ""id"": ""37bf509c-c7fc-4bca-85b9-de8af496527b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventory"",
                    ""type"": ""PassThrough"",
                    ""id"": ""a4025534-216a-4df2-b993-74cb79ac4c94"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hit"",
                    ""type"": ""Button"",
                    ""id"": ""60507cde-ee82-435c-89d2-5c409ebba5e7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InteractionConstruction"",
                    ""type"": ""Button"",
                    ""id"": ""bef15890-04ef-4044-a249-30a72ec89ebe"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CreativeMode"",
                    ""type"": ""Button"",
                    ""id"": ""33f29512-2aae-4310-a6ef-4129386875aa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""b7594ddb-26c9-4ba2-bd5a-901468929edc"",
                    ""path"": ""2DVector(mode=1)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""2063a8b5-6a45-43de-851b-65f3d46e7b58"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""64e4d037-32e1-4fb9-80e4-fc7330404dfe"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""0fce8b11-5eab-4e4e-a741-b732e7b20873"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""7bdda0d6-57a8-47c8-8238-8aecf3110e47"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""up"",
                    ""id"": ""bb94b405-58d3-4998-8535-d705c1218a98"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""929d9071-7dd0-4368-9743-6793bb98087e"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""28abadba-06ff-4d37-bb70-af2f1e35a3b9"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""45f115b6-9b4f-4ba8-b500-b94c93bf7d7e"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e2f9aa65-db06-4c5b-a2e9-41bc8acb9517"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ed66cbff-2900-4a62-8896-696503cfcd31"",
                    ""path"": ""<Pointer>/delta"",
                    ""interactions"": """",
                    ""processors"": ""InvertVector2(invertX=false),ScaleVector2(x=0.05,y=0.05)"",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d1d171b6-19d8-47a6-ba3a-71b6a8e7b3c0"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": ""InvertVector2(invertX=false),StickDeadzone,ScaleVector2(x=300,y=300)"",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1bd55a0b-761e-4ae4-89ae-8ec127e08a29"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9f973413-5e27-4239-acee-38c4a63feeba"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dc65b89f-9bd3-43fb-92af-d0d87ba5faa4"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c8fcd86e-dcfd-4f88-8e93-b638cdbf3320"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""83164a15-28fa-4f91-9fa6-e7b834307468"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Stealth"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""72bd239f-0b9a-4b2a-9f25-0356723998a8"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Stealth"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ee6014f8-929a-468e-8b4f-51fbd50da8c3"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""PickUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba3973d2-92fe-4c3f-9132-4cd0c42fd51c"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""PickUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f959c2a1-5483-46d4-9346-882fd9c3f26c"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bd1cfd0e-1542-4d82-a467-e27e9467faac"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ce711ecb-6aee-4b1a-b307-f6e307e937cb"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6cfecbe3-2541-4681-a930-186914a85eca"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9cd15f4c-dda5-4088-b69d-d9cd37abb971"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Hit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3a7a7226-0286-4b8a-971a-c21733fc249a"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""InteractionConstruction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""68345e19-cee3-449e-9fa0-bad770c1e6e4"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""CreativeMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Inventory"",
            ""id"": ""87e0910c-26c9-4778-8284-1f6445400735"",
            ""actions"": [
                {
                    ""name"": ""Hotbar 1"",
                    ""type"": ""Button"",
                    ""id"": ""fc76a0b1-e2b1-4b83-bf07-ba4311c6e16a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar 2"",
                    ""type"": ""Button"",
                    ""id"": ""f96fb712-6318-4e6f-a702-dff029fe3cc4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar 3"",
                    ""type"": ""Button"",
                    ""id"": ""003072c6-8abe-403f-a38e-e4eb4bf37767"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar 4"",
                    ""type"": ""Button"",
                    ""id"": ""0917b6cd-5988-4c9c-8f59-6aee6d464526"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar 5"",
                    ""type"": ""Button"",
                    ""id"": ""ab37f07b-9a87-4d3c-88a7-6f50f1ea9c6c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Hotbar 6"",
                    ""type"": ""Button"",
                    ""id"": ""210d7c25-6997-4e54-bc41-61e14057c5c0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseWheel"",
                    ""type"": ""PassThrough"",
                    ""id"": ""8cdbde8d-0486-4ae9-8e0c-12bed9ba831b"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Use Item"",
                    ""type"": ""Button"",
                    ""id"": ""ad452f41-c82c-4467-b181-d9b3dcec3b12"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectInventoryItem"",
                    ""type"": ""PassThrough"",
                    ""id"": ""10ffe489-ecca-4617-a495-d97531e80b1a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""InteractItem"",
                    ""type"": ""Button"",
                    ""id"": ""06be1997-3cb1-4744-a839-dec16b3fb82a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""4f2c0e50-4d6e-4a3a-b878-9e8b664c539f"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Hotbar 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""072aa3b8-eead-4af0-82b1-4dcbde7631e6"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Hotbar 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dbe8ad69-5bbf-4971-9b47-533321255d67"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Hotbar 3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4ec7e15c-3eff-45f4-98e0-377024270425"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Hotbar 4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4e8f6261-4c73-4dc7-aaa7-1695e2c9b698"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Hotbar 5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ad86b060-b357-4bf2-83c4-f768b6f0cb41"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Hotbar 6"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0eb5f5e5-d7ba-422a-8c94-77300bd8ee4b"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""MouseWheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""06b707a1-c3aa-4e59-a778-75c6b2acef90"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Use Item"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ff118eda-bbc5-4ac6-93e5-15c4425fda0a"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""SelectInventoryItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2e6abb42-663e-437c-962a-3dd87a00b4f6"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""InteractItem"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""BuildSystem"",
            ""id"": ""98d18cfb-4e1d-4b09-8b01-3bcc575e1776"",
            ""actions"": [
                {
                    ""name"": ""PutBuilding"",
                    ""type"": ""Button"",
                    ""id"": ""746faf93-364a-4565-807f-dd075c3dae99"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RotateBuilding"",
                    ""type"": ""Button"",
                    ""id"": ""dd0bb7cc-6f54-4c62-96ac-9e69b814b963"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DeleteModeBuilding"",
                    ""type"": ""Button"",
                    ""id"": ""89987dad-a477-44a8-92d0-908e659fd7fa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DeleteBuilding"",
                    ""type"": ""Button"",
                    ""id"": ""f38090b0-46ed-4afa-8885-106854914e33"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""22696530-4ddf-48e3-9e63-64721314f2c8"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PutBuilding"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""698abcc2-200c-4a5d-acfe-5a7d16ef05da"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""RotateBuilding"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""284f1d11-b791-476a-9335-73cacfa261e6"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DeleteModeBuilding"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""892cfc30-7c43-4939-b5f1-50b4edbcd76a"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DeleteBuilding"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""WeaponSystem"",
            ""id"": ""541d161c-eff1-48dc-9394-04c9f75bf750"",
            ""actions"": [
                {
                    ""name"": ""Attack"",
                    ""type"": ""PassThrough"",
                    ""id"": ""d84e7900-b330-45f6-baed-0f4af66a4da9"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Use"",
                    ""type"": ""Button"",
                    ""id"": ""334f5c1f-daab-47a5-99e2-d3c1ef79b5b8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Aim"",
                    ""type"": ""Button"",
                    ""id"": ""73cdd62c-38c2-47fb-91ea-16c1c968b4f1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""c50f2373-8b48-4cad-929d-f91dd8d18ef8"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""36eef06c-3878-4246-83e7-489cc67ffa59"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardMouse"",
                    ""action"": ""Use"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c93ceb4f-d6a7-4ded-8cca-0df5f4c4335c"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Aim"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UIScreen"",
            ""id"": ""8ad551f7-96ca-48d7-ad26-53f657e35702"",
            ""actions"": [
                {
                    ""name"": ""TogglePauseScreen"",
                    ""type"": ""Button"",
                    ""id"": ""4b30d7f0-4304-46d5-b84e-42339ed54962"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ToggleShopScreen"",
                    ""type"": ""Button"",
                    ""id"": ""6044b8f0-2dc4-4d28-b85b-0e7b8b716c7f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""7006c95b-0080-41d8-962b-682bf981d514"",
                    ""path"": ""<Keyboard>/backquote"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TogglePauseScreen"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4760fd54-dfe9-4390-bf48-b478282a81dd"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ToggleShopScreen"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""KeyboardMouse"",
            ""bindingGroup"": ""KeyboardMouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": true,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<XInputController>"",
                    ""isOptional"": true,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<DualShockGamepad>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Xbox Controller"",
            ""bindingGroup"": ""Xbox Controller"",
            ""devices"": []
        },
        {
            ""name"": ""PS4 Controller"",
            ""bindingGroup"": ""PS4 Controller"",
            ""devices"": []
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Look = m_Player.FindAction("Look", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_Sprint = m_Player.FindAction("Sprint", throwIfNotFound: true);
        m_Player_Stealth = m_Player.FindAction("Stealth", throwIfNotFound: true);
        m_Player_PickUp = m_Player.FindAction("PickUp", throwIfNotFound: true);
        m_Player_Interact = m_Player.FindAction("Interact", throwIfNotFound: true);
        m_Player_Inventory = m_Player.FindAction("Inventory", throwIfNotFound: true);
        m_Player_Hit = m_Player.FindAction("Hit", throwIfNotFound: true);
        m_Player_InteractionConstruction = m_Player.FindAction("InteractionConstruction", throwIfNotFound: true);
        m_Player_CreativeMode = m_Player.FindAction("CreativeMode", throwIfNotFound: true);
        // Inventory
        m_Inventory = asset.FindActionMap("Inventory", throwIfNotFound: true);
        m_Inventory_Hotbar1 = m_Inventory.FindAction("Hotbar 1", throwIfNotFound: true);
        m_Inventory_Hotbar2 = m_Inventory.FindAction("Hotbar 2", throwIfNotFound: true);
        m_Inventory_Hotbar3 = m_Inventory.FindAction("Hotbar 3", throwIfNotFound: true);
        m_Inventory_Hotbar4 = m_Inventory.FindAction("Hotbar 4", throwIfNotFound: true);
        m_Inventory_Hotbar5 = m_Inventory.FindAction("Hotbar 5", throwIfNotFound: true);
        m_Inventory_Hotbar6 = m_Inventory.FindAction("Hotbar 6", throwIfNotFound: true);
        m_Inventory_MouseWheel = m_Inventory.FindAction("MouseWheel", throwIfNotFound: true);
        m_Inventory_UseItem = m_Inventory.FindAction("Use Item", throwIfNotFound: true);
        m_Inventory_SelectInventoryItem = m_Inventory.FindAction("SelectInventoryItem", throwIfNotFound: true);
        m_Inventory_InteractItem = m_Inventory.FindAction("InteractItem", throwIfNotFound: true);
        // BuildSystem
        m_BuildSystem = asset.FindActionMap("BuildSystem", throwIfNotFound: true);
        m_BuildSystem_PutBuilding = m_BuildSystem.FindAction("PutBuilding", throwIfNotFound: true);
        m_BuildSystem_RotateBuilding = m_BuildSystem.FindAction("RotateBuilding", throwIfNotFound: true);
        m_BuildSystem_DeleteModeBuilding = m_BuildSystem.FindAction("DeleteModeBuilding", throwIfNotFound: true);
        m_BuildSystem_DeleteBuilding = m_BuildSystem.FindAction("DeleteBuilding", throwIfNotFound: true);
        // WeaponSystem
        m_WeaponSystem = asset.FindActionMap("WeaponSystem", throwIfNotFound: true);
        m_WeaponSystem_Attack = m_WeaponSystem.FindAction("Attack", throwIfNotFound: true);
        m_WeaponSystem_Use = m_WeaponSystem.FindAction("Use", throwIfNotFound: true);
        m_WeaponSystem_Aim = m_WeaponSystem.FindAction("Aim", throwIfNotFound: true);
        // UIScreen
        m_UIScreen = asset.FindActionMap("UIScreen", throwIfNotFound: true);
        m_UIScreen_TogglePauseScreen = m_UIScreen.FindAction("TogglePauseScreen", throwIfNotFound: true);
        m_UIScreen_ToggleShopScreen = m_UIScreen.FindAction("ToggleShopScreen", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private IPlayerActions m_PlayerActionsCallbackInterface;
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Look;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_Sprint;
    private readonly InputAction m_Player_Stealth;
    private readonly InputAction m_Player_PickUp;
    private readonly InputAction m_Player_Interact;
    private readonly InputAction m_Player_Inventory;
    private readonly InputAction m_Player_Hit;
    private readonly InputAction m_Player_InteractionConstruction;
    private readonly InputAction m_Player_CreativeMode;
    public struct PlayerActions
    {
        private @PlayerInput m_Wrapper;
        public PlayerActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Look => m_Wrapper.m_Player_Look;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @Sprint => m_Wrapper.m_Player_Sprint;
        public InputAction @Stealth => m_Wrapper.m_Player_Stealth;
        public InputAction @PickUp => m_Wrapper.m_Player_PickUp;
        public InputAction @Interact => m_Wrapper.m_Player_Interact;
        public InputAction @Inventory => m_Wrapper.m_Player_Inventory;
        public InputAction @Hit => m_Wrapper.m_Player_Hit;
        public InputAction @InteractionConstruction => m_Wrapper.m_Player_InteractionConstruction;
        public InputAction @CreativeMode => m_Wrapper.m_Player_CreativeMode;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnMove;
                @Look.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnLook;
                @Jump.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnJump;
                @Sprint.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSprint;
                @Sprint.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSprint;
                @Sprint.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnSprint;
                @Stealth.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnStealth;
                @Stealth.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnStealth;
                @Stealth.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnStealth;
                @PickUp.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPickUp;
                @PickUp.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPickUp;
                @PickUp.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnPickUp;
                @Interact.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteract;
                @Inventory.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInventory;
                @Inventory.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInventory;
                @Inventory.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInventory;
                @Hit.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnHit;
                @Hit.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnHit;
                @Hit.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnHit;
                @InteractionConstruction.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteractionConstruction;
                @InteractionConstruction.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteractionConstruction;
                @InteractionConstruction.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnInteractionConstruction;
                @CreativeMode.started -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCreativeMode;
                @CreativeMode.performed -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCreativeMode;
                @CreativeMode.canceled -= m_Wrapper.m_PlayerActionsCallbackInterface.OnCreativeMode;
            }
            m_Wrapper.m_PlayerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Sprint.started += instance.OnSprint;
                @Sprint.performed += instance.OnSprint;
                @Sprint.canceled += instance.OnSprint;
                @Stealth.started += instance.OnStealth;
                @Stealth.performed += instance.OnStealth;
                @Stealth.canceled += instance.OnStealth;
                @PickUp.started += instance.OnPickUp;
                @PickUp.performed += instance.OnPickUp;
                @PickUp.canceled += instance.OnPickUp;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Inventory.started += instance.OnInventory;
                @Inventory.performed += instance.OnInventory;
                @Inventory.canceled += instance.OnInventory;
                @Hit.started += instance.OnHit;
                @Hit.performed += instance.OnHit;
                @Hit.canceled += instance.OnHit;
                @InteractionConstruction.started += instance.OnInteractionConstruction;
                @InteractionConstruction.performed += instance.OnInteractionConstruction;
                @InteractionConstruction.canceled += instance.OnInteractionConstruction;
                @CreativeMode.started += instance.OnCreativeMode;
                @CreativeMode.performed += instance.OnCreativeMode;
                @CreativeMode.canceled += instance.OnCreativeMode;
            }
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // Inventory
    private readonly InputActionMap m_Inventory;
    private IInventoryActions m_InventoryActionsCallbackInterface;
    private readonly InputAction m_Inventory_Hotbar1;
    private readonly InputAction m_Inventory_Hotbar2;
    private readonly InputAction m_Inventory_Hotbar3;
    private readonly InputAction m_Inventory_Hotbar4;
    private readonly InputAction m_Inventory_Hotbar5;
    private readonly InputAction m_Inventory_Hotbar6;
    private readonly InputAction m_Inventory_MouseWheel;
    private readonly InputAction m_Inventory_UseItem;
    private readonly InputAction m_Inventory_SelectInventoryItem;
    private readonly InputAction m_Inventory_InteractItem;
    public struct InventoryActions
    {
        private @PlayerInput m_Wrapper;
        public InventoryActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Hotbar1 => m_Wrapper.m_Inventory_Hotbar1;
        public InputAction @Hotbar2 => m_Wrapper.m_Inventory_Hotbar2;
        public InputAction @Hotbar3 => m_Wrapper.m_Inventory_Hotbar3;
        public InputAction @Hotbar4 => m_Wrapper.m_Inventory_Hotbar4;
        public InputAction @Hotbar5 => m_Wrapper.m_Inventory_Hotbar5;
        public InputAction @Hotbar6 => m_Wrapper.m_Inventory_Hotbar6;
        public InputAction @MouseWheel => m_Wrapper.m_Inventory_MouseWheel;
        public InputAction @UseItem => m_Wrapper.m_Inventory_UseItem;
        public InputAction @SelectInventoryItem => m_Wrapper.m_Inventory_SelectInventoryItem;
        public InputAction @InteractItem => m_Wrapper.m_Inventory_InteractItem;
        public InputActionMap Get() { return m_Wrapper.m_Inventory; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InventoryActions set) { return set.Get(); }
        public void SetCallbacks(IInventoryActions instance)
        {
            if (m_Wrapper.m_InventoryActionsCallbackInterface != null)
            {
                @Hotbar1.started -= m_Wrapper.m_InventoryActionsCallbackInterface.OnHotbar1;
                @Hotbar1.performed -= m_Wrapper.m_InventoryActionsCallbackInterface.OnHotbar1;
                @Hotbar1.canceled -= m_Wrapper.m_InventoryActionsCallbackInterface.OnHotbar1;
                @Hotbar2.started -= m_Wrapper.m_InventoryActionsCallbackInterface.OnHotbar2;
                @Hotbar2.performed -= m_Wrapper.m_InventoryActionsCallbackInterface.OnHotbar2;
                @Hotbar2.canceled -= m_Wrapper.m_InventoryActionsCallbackInterface.OnHotbar2;
                @Hotbar3.started -= m_Wrapper.m_InventoryActionsCallbackInterface.OnHotbar3;
                @Hotbar3.performed -= m_Wrapper.m_InventoryActionsCallbackInterface.OnHotbar3;
                @Hotbar3.canceled -= m_Wrapper.m_InventoryActionsCallbackInterface.OnHotbar3;
                @Hotbar4.started -= m_Wrapper.m_InventoryActionsCallbackInterface.OnHotbar4;
                @Hotbar4.performed -= m_Wrapper.m_InventoryActionsCallbackInterface.OnHotbar4;
                @Hotbar4.canceled -= m_Wrapper.m_InventoryActionsCallbackInterface.OnHotbar4;
                @Hotbar5.started -= m_Wrapper.m_InventoryActionsCallbackInterface.OnHotbar5;
                @Hotbar5.performed -= m_Wrapper.m_InventoryActionsCallbackInterface.OnHotbar5;
                @Hotbar5.canceled -= m_Wrapper.m_InventoryActionsCallbackInterface.OnHotbar5;
                @Hotbar6.started -= m_Wrapper.m_InventoryActionsCallbackInterface.OnHotbar6;
                @Hotbar6.performed -= m_Wrapper.m_InventoryActionsCallbackInterface.OnHotbar6;
                @Hotbar6.canceled -= m_Wrapper.m_InventoryActionsCallbackInterface.OnHotbar6;
                @MouseWheel.started -= m_Wrapper.m_InventoryActionsCallbackInterface.OnMouseWheel;
                @MouseWheel.performed -= m_Wrapper.m_InventoryActionsCallbackInterface.OnMouseWheel;
                @MouseWheel.canceled -= m_Wrapper.m_InventoryActionsCallbackInterface.OnMouseWheel;
                @UseItem.started -= m_Wrapper.m_InventoryActionsCallbackInterface.OnUseItem;
                @UseItem.performed -= m_Wrapper.m_InventoryActionsCallbackInterface.OnUseItem;
                @UseItem.canceled -= m_Wrapper.m_InventoryActionsCallbackInterface.OnUseItem;
                @SelectInventoryItem.started -= m_Wrapper.m_InventoryActionsCallbackInterface.OnSelectInventoryItem;
                @SelectInventoryItem.performed -= m_Wrapper.m_InventoryActionsCallbackInterface.OnSelectInventoryItem;
                @SelectInventoryItem.canceled -= m_Wrapper.m_InventoryActionsCallbackInterface.OnSelectInventoryItem;
                @InteractItem.started -= m_Wrapper.m_InventoryActionsCallbackInterface.OnInteractItem;
                @InteractItem.performed -= m_Wrapper.m_InventoryActionsCallbackInterface.OnInteractItem;
                @InteractItem.canceled -= m_Wrapper.m_InventoryActionsCallbackInterface.OnInteractItem;
            }
            m_Wrapper.m_InventoryActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Hotbar1.started += instance.OnHotbar1;
                @Hotbar1.performed += instance.OnHotbar1;
                @Hotbar1.canceled += instance.OnHotbar1;
                @Hotbar2.started += instance.OnHotbar2;
                @Hotbar2.performed += instance.OnHotbar2;
                @Hotbar2.canceled += instance.OnHotbar2;
                @Hotbar3.started += instance.OnHotbar3;
                @Hotbar3.performed += instance.OnHotbar3;
                @Hotbar3.canceled += instance.OnHotbar3;
                @Hotbar4.started += instance.OnHotbar4;
                @Hotbar4.performed += instance.OnHotbar4;
                @Hotbar4.canceled += instance.OnHotbar4;
                @Hotbar5.started += instance.OnHotbar5;
                @Hotbar5.performed += instance.OnHotbar5;
                @Hotbar5.canceled += instance.OnHotbar5;
                @Hotbar6.started += instance.OnHotbar6;
                @Hotbar6.performed += instance.OnHotbar6;
                @Hotbar6.canceled += instance.OnHotbar6;
                @MouseWheel.started += instance.OnMouseWheel;
                @MouseWheel.performed += instance.OnMouseWheel;
                @MouseWheel.canceled += instance.OnMouseWheel;
                @UseItem.started += instance.OnUseItem;
                @UseItem.performed += instance.OnUseItem;
                @UseItem.canceled += instance.OnUseItem;
                @SelectInventoryItem.started += instance.OnSelectInventoryItem;
                @SelectInventoryItem.performed += instance.OnSelectInventoryItem;
                @SelectInventoryItem.canceled += instance.OnSelectInventoryItem;
                @InteractItem.started += instance.OnInteractItem;
                @InteractItem.performed += instance.OnInteractItem;
                @InteractItem.canceled += instance.OnInteractItem;
            }
        }
    }
    public InventoryActions @Inventory => new InventoryActions(this);

    // BuildSystem
    private readonly InputActionMap m_BuildSystem;
    private IBuildSystemActions m_BuildSystemActionsCallbackInterface;
    private readonly InputAction m_BuildSystem_PutBuilding;
    private readonly InputAction m_BuildSystem_RotateBuilding;
    private readonly InputAction m_BuildSystem_DeleteModeBuilding;
    private readonly InputAction m_BuildSystem_DeleteBuilding;
    public struct BuildSystemActions
    {
        private @PlayerInput m_Wrapper;
        public BuildSystemActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @PutBuilding => m_Wrapper.m_BuildSystem_PutBuilding;
        public InputAction @RotateBuilding => m_Wrapper.m_BuildSystem_RotateBuilding;
        public InputAction @DeleteModeBuilding => m_Wrapper.m_BuildSystem_DeleteModeBuilding;
        public InputAction @DeleteBuilding => m_Wrapper.m_BuildSystem_DeleteBuilding;
        public InputActionMap Get() { return m_Wrapper.m_BuildSystem; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(BuildSystemActions set) { return set.Get(); }
        public void SetCallbacks(IBuildSystemActions instance)
        {
            if (m_Wrapper.m_BuildSystemActionsCallbackInterface != null)
            {
                @PutBuilding.started -= m_Wrapper.m_BuildSystemActionsCallbackInterface.OnPutBuilding;
                @PutBuilding.performed -= m_Wrapper.m_BuildSystemActionsCallbackInterface.OnPutBuilding;
                @PutBuilding.canceled -= m_Wrapper.m_BuildSystemActionsCallbackInterface.OnPutBuilding;
                @RotateBuilding.started -= m_Wrapper.m_BuildSystemActionsCallbackInterface.OnRotateBuilding;
                @RotateBuilding.performed -= m_Wrapper.m_BuildSystemActionsCallbackInterface.OnRotateBuilding;
                @RotateBuilding.canceled -= m_Wrapper.m_BuildSystemActionsCallbackInterface.OnRotateBuilding;
                @DeleteModeBuilding.started -= m_Wrapper.m_BuildSystemActionsCallbackInterface.OnDeleteModeBuilding;
                @DeleteModeBuilding.performed -= m_Wrapper.m_BuildSystemActionsCallbackInterface.OnDeleteModeBuilding;
                @DeleteModeBuilding.canceled -= m_Wrapper.m_BuildSystemActionsCallbackInterface.OnDeleteModeBuilding;
                @DeleteBuilding.started -= m_Wrapper.m_BuildSystemActionsCallbackInterface.OnDeleteBuilding;
                @DeleteBuilding.performed -= m_Wrapper.m_BuildSystemActionsCallbackInterface.OnDeleteBuilding;
                @DeleteBuilding.canceled -= m_Wrapper.m_BuildSystemActionsCallbackInterface.OnDeleteBuilding;
            }
            m_Wrapper.m_BuildSystemActionsCallbackInterface = instance;
            if (instance != null)
            {
                @PutBuilding.started += instance.OnPutBuilding;
                @PutBuilding.performed += instance.OnPutBuilding;
                @PutBuilding.canceled += instance.OnPutBuilding;
                @RotateBuilding.started += instance.OnRotateBuilding;
                @RotateBuilding.performed += instance.OnRotateBuilding;
                @RotateBuilding.canceled += instance.OnRotateBuilding;
                @DeleteModeBuilding.started += instance.OnDeleteModeBuilding;
                @DeleteModeBuilding.performed += instance.OnDeleteModeBuilding;
                @DeleteModeBuilding.canceled += instance.OnDeleteModeBuilding;
                @DeleteBuilding.started += instance.OnDeleteBuilding;
                @DeleteBuilding.performed += instance.OnDeleteBuilding;
                @DeleteBuilding.canceled += instance.OnDeleteBuilding;
            }
        }
    }
    public BuildSystemActions @BuildSystem => new BuildSystemActions(this);

    // WeaponSystem
    private readonly InputActionMap m_WeaponSystem;
    private IWeaponSystemActions m_WeaponSystemActionsCallbackInterface;
    private readonly InputAction m_WeaponSystem_Attack;
    private readonly InputAction m_WeaponSystem_Use;
    private readonly InputAction m_WeaponSystem_Aim;
    public struct WeaponSystemActions
    {
        private @PlayerInput m_Wrapper;
        public WeaponSystemActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Attack => m_Wrapper.m_WeaponSystem_Attack;
        public InputAction @Use => m_Wrapper.m_WeaponSystem_Use;
        public InputAction @Aim => m_Wrapper.m_WeaponSystem_Aim;
        public InputActionMap Get() { return m_Wrapper.m_WeaponSystem; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(WeaponSystemActions set) { return set.Get(); }
        public void SetCallbacks(IWeaponSystemActions instance)
        {
            if (m_Wrapper.m_WeaponSystemActionsCallbackInterface != null)
            {
                @Attack.started -= m_Wrapper.m_WeaponSystemActionsCallbackInterface.OnAttack;
                @Attack.performed -= m_Wrapper.m_WeaponSystemActionsCallbackInterface.OnAttack;
                @Attack.canceled -= m_Wrapper.m_WeaponSystemActionsCallbackInterface.OnAttack;
                @Use.started -= m_Wrapper.m_WeaponSystemActionsCallbackInterface.OnUse;
                @Use.performed -= m_Wrapper.m_WeaponSystemActionsCallbackInterface.OnUse;
                @Use.canceled -= m_Wrapper.m_WeaponSystemActionsCallbackInterface.OnUse;
                @Aim.started -= m_Wrapper.m_WeaponSystemActionsCallbackInterface.OnAim;
                @Aim.performed -= m_Wrapper.m_WeaponSystemActionsCallbackInterface.OnAim;
                @Aim.canceled -= m_Wrapper.m_WeaponSystemActionsCallbackInterface.OnAim;
            }
            m_Wrapper.m_WeaponSystemActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Attack.started += instance.OnAttack;
                @Attack.performed += instance.OnAttack;
                @Attack.canceled += instance.OnAttack;
                @Use.started += instance.OnUse;
                @Use.performed += instance.OnUse;
                @Use.canceled += instance.OnUse;
                @Aim.started += instance.OnAim;
                @Aim.performed += instance.OnAim;
                @Aim.canceled += instance.OnAim;
            }
        }
    }
    public WeaponSystemActions @WeaponSystem => new WeaponSystemActions(this);

    // UIScreen
    private readonly InputActionMap m_UIScreen;
    private IUIScreenActions m_UIScreenActionsCallbackInterface;
    private readonly InputAction m_UIScreen_TogglePauseScreen;
    private readonly InputAction m_UIScreen_ToggleShopScreen;
    public struct UIScreenActions
    {
        private @PlayerInput m_Wrapper;
        public UIScreenActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @TogglePauseScreen => m_Wrapper.m_UIScreen_TogglePauseScreen;
        public InputAction @ToggleShopScreen => m_Wrapper.m_UIScreen_ToggleShopScreen;
        public InputActionMap Get() { return m_Wrapper.m_UIScreen; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIScreenActions set) { return set.Get(); }
        public void SetCallbacks(IUIScreenActions instance)
        {
            if (m_Wrapper.m_UIScreenActionsCallbackInterface != null)
            {
                @TogglePauseScreen.started -= m_Wrapper.m_UIScreenActionsCallbackInterface.OnTogglePauseScreen;
                @TogglePauseScreen.performed -= m_Wrapper.m_UIScreenActionsCallbackInterface.OnTogglePauseScreen;
                @TogglePauseScreen.canceled -= m_Wrapper.m_UIScreenActionsCallbackInterface.OnTogglePauseScreen;
                @ToggleShopScreen.started -= m_Wrapper.m_UIScreenActionsCallbackInterface.OnToggleShopScreen;
                @ToggleShopScreen.performed -= m_Wrapper.m_UIScreenActionsCallbackInterface.OnToggleShopScreen;
                @ToggleShopScreen.canceled -= m_Wrapper.m_UIScreenActionsCallbackInterface.OnToggleShopScreen;
            }
            m_Wrapper.m_UIScreenActionsCallbackInterface = instance;
            if (instance != null)
            {
                @TogglePauseScreen.started += instance.OnTogglePauseScreen;
                @TogglePauseScreen.performed += instance.OnTogglePauseScreen;
                @TogglePauseScreen.canceled += instance.OnTogglePauseScreen;
                @ToggleShopScreen.started += instance.OnToggleShopScreen;
                @ToggleShopScreen.performed += instance.OnToggleShopScreen;
                @ToggleShopScreen.canceled += instance.OnToggleShopScreen;
            }
        }
    }
    public UIScreenActions @UIScreen => new UIScreenActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("KeyboardMouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    private int m_XboxControllerSchemeIndex = -1;
    public InputControlScheme XboxControllerScheme
    {
        get
        {
            if (m_XboxControllerSchemeIndex == -1) m_XboxControllerSchemeIndex = asset.FindControlSchemeIndex("Xbox Controller");
            return asset.controlSchemes[m_XboxControllerSchemeIndex];
        }
    }
    private int m_PS4ControllerSchemeIndex = -1;
    public InputControlScheme PS4ControllerScheme
    {
        get
        {
            if (m_PS4ControllerSchemeIndex == -1) m_PS4ControllerSchemeIndex = asset.FindControlSchemeIndex("PS4 Controller");
            return asset.controlSchemes[m_PS4ControllerSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnStealth(InputAction.CallbackContext context);
        void OnPickUp(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnInventory(InputAction.CallbackContext context);
        void OnHit(InputAction.CallbackContext context);
        void OnInteractionConstruction(InputAction.CallbackContext context);
        void OnCreativeMode(InputAction.CallbackContext context);
    }
    public interface IInventoryActions
    {
        void OnHotbar1(InputAction.CallbackContext context);
        void OnHotbar2(InputAction.CallbackContext context);
        void OnHotbar3(InputAction.CallbackContext context);
        void OnHotbar4(InputAction.CallbackContext context);
        void OnHotbar5(InputAction.CallbackContext context);
        void OnHotbar6(InputAction.CallbackContext context);
        void OnMouseWheel(InputAction.CallbackContext context);
        void OnUseItem(InputAction.CallbackContext context);
        void OnSelectInventoryItem(InputAction.CallbackContext context);
        void OnInteractItem(InputAction.CallbackContext context);
    }
    public interface IBuildSystemActions
    {
        void OnPutBuilding(InputAction.CallbackContext context);
        void OnRotateBuilding(InputAction.CallbackContext context);
        void OnDeleteModeBuilding(InputAction.CallbackContext context);
        void OnDeleteBuilding(InputAction.CallbackContext context);
    }
    public interface IWeaponSystemActions
    {
        void OnAttack(InputAction.CallbackContext context);
        void OnUse(InputAction.CallbackContext context);
        void OnAim(InputAction.CallbackContext context);
    }
    public interface IUIScreenActions
    {
        void OnTogglePauseScreen(InputAction.CallbackContext context);
        void OnToggleShopScreen(InputAction.CallbackContext context);
    }
}
